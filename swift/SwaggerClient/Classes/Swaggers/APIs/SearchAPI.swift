//
// SearchAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class SearchAPI: APIBase {
    /**
     Search
     
     - parameter category: (query)  (optional)
     - parameter email: (query)  (optional)
     - parameter keyword: (query)  (optional)
     - parameter language: (query)  (optional)
     - parameter latLng: (query)  (optional)
     - parameter location: (query)  (optional)
     - parameter orgName: (query)  (optional)
     - parameter radius: (query)  (optional)
     - parameter serviceArea: (query)  (optional)
     - parameter status: (query)  (optional)
     - parameter page: (query)  (optional)
     - parameter perPage: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func searchLocations(category category: String? = nil, email: String? = nil, keyword: String? = nil, language: String? = nil, latLng: String? = nil, location: String? = nil, orgName: String? = nil, radius: String? = nil, serviceArea: String? = nil, status: String? = nil, page: String? = nil, perPage: String? = nil, completion: ((data: [Location]?, error: ErrorType?) -> Void)) {
        searchLocationsWithRequestBuilder(category: category, email: email, keyword: keyword, language: language, latLng: latLng, location: location, orgName: orgName, radius: radius, serviceArea: serviceArea, status: status, page: page, perPage: perPage).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search
     - GET /search
     - This endpoint retrieves all locations that match the criteria based on the parameters below. Multiple parameters can be used at the same time, separated by an ampersand (&).
     - examples: [{contentType=application/json, example=[ {
  "alternate_name" : "aeiou",
  "organization_id" : "aeiou",
  "latitude" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "id" : "aeiou",
  "transportation" : "aeiou",
  "longitude" : "aeiou"
} ]}]
     
     - parameter category: (query)  (optional)
     - parameter email: (query)  (optional)
     - parameter keyword: (query)  (optional)
     - parameter language: (query)  (optional)
     - parameter latLng: (query)  (optional)
     - parameter location: (query)  (optional)
     - parameter orgName: (query)  (optional)
     - parameter radius: (query)  (optional)
     - parameter serviceArea: (query)  (optional)
     - parameter status: (query)  (optional)
     - parameter page: (query)  (optional)
     - parameter perPage: (query)  (optional)

     - returns: RequestBuilder<[Location]> 
     */
    public class func searchLocationsWithRequestBuilder(category category: String? = nil, email: String? = nil, keyword: String? = nil, language: String? = nil, latLng: String? = nil, location: String? = nil, orgName: String? = nil, radius: String? = nil, serviceArea: String? = nil, status: String? = nil, page: String? = nil, perPage: String? = nil) -> RequestBuilder<[Location]> {
        let path = "/search"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "category": category,
            "email": email,
            "keyword": keyword,
            "language": language,
            "lat_lng": latLng,
            "location": location,
            "org_name": orgName,
            "radius": radius,
            "service_area": serviceArea,
            "status": status,
            "page": page,
            "per_page": perPage
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Location]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
