//
// OrganizationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OrganizationsAPI: APIBase {
    /**
     Organizations
     
     - parameter organizationId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func retrieveLOrganization(organizationId organizationId: String, completion: ((data: [Organization]?, error: ErrorType?) -> Void)) {
        retrieveLOrganizationWithRequestBuilder(organizationId: organizationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Organizations
     - GET /organizations/{organizationId}
     - Retrieve all of the organizations available in this database.
     - examples: [{contentType=application/json, example=[ {
  "alternate_name" : "aeiou",
  "tax_status" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "year_incorporated" : "aeiou",
  "id" : "aeiou",
  "legal_status" : "aeiou",
  "email" : "aeiou",
  "url" : "aeiou",
  "tax_id" : "aeiou"
} ]}]
     
     - parameter organizationId: (path)  

     - returns: RequestBuilder<[Organization]> 
     */
    public class func retrieveLOrganizationWithRequestBuilder(organizationId organizationId: String) -> RequestBuilder<[Organization]> {
        var path = "/organizations/{organizationId}"
        path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Organization]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Organization Locations
     
     - parameter organizationId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func retrieveLOrganizationLocations(organizationId organizationId: String, completion: ((data: [Location]?, error: ErrorType?) -> Void)) {
        retrieveLOrganizationLocationsWithRequestBuilder(organizationId: organizationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Organization Locations
     - GET /organizations/{organizationId}/locations
     - This endpoint retrieves all locations that belong to a particular organization.
     - examples: [{contentType=application/json, example=[ {
  "alternate_name" : "aeiou",
  "organization_id" : "aeiou",
  "latitude" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "id" : "aeiou",
  "transportation" : "aeiou",
  "longitude" : "aeiou"
} ]}]
     
     - parameter organizationId: (path)  

     - returns: RequestBuilder<[Location]> 
     */
    public class func retrieveLOrganizationLocationsWithRequestBuilder(organizationId organizationId: String) -> RequestBuilder<[Location]> {
        var path = "/organizations/{organizationId}/locations"
        path = path.stringByReplacingOccurrencesOfString("{organizationId}", withString: "\(organizationId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Location]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Organizations
     
     - parameter page: (query)  (optional)
     - parameter perPage: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func retrieveLOrganizations(page page: String? = nil, perPage: String? = nil, completion: ((data: [Organization]?, error: ErrorType?) -> Void)) {
        retrieveLOrganizationsWithRequestBuilder(page: page, perPage: perPage).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Organizations
     - GET /organizations
     - Retrieve all of the organizations available in this database.
     - examples: [{contentType=application/json, example=[ {
  "alternate_name" : "aeiou",
  "tax_status" : "aeiou",
  "name" : "aeiou",
  "description" : "aeiou",
  "year_incorporated" : "aeiou",
  "id" : "aeiou",
  "legal_status" : "aeiou",
  "email" : "aeiou",
  "url" : "aeiou",
  "tax_id" : "aeiou"
} ]}]
     
     - parameter page: (query)  (optional)
     - parameter perPage: (query)  (optional)

     - returns: RequestBuilder<[Organization]> 
     */
    public class func retrieveLOrganizationsWithRequestBuilder(page page: String? = nil, perPage: String? = nil) -> RequestBuilder<[Organization]> {
        let path = "/organizations"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "page": page,
            "per_page": perPage
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Organization]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
