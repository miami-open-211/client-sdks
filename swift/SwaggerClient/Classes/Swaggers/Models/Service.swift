//
// Service.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class Service: JSONEncodable {
    /** Each service must have a unique identifier. */
    public var id: String?
    /** The identifier of the organization that provides this service. */
    public var organizationId: String?
    /** The identifier of the location where this service is delivered. */
    public var locationId: String?
    /** The identifier of the program this service is delivered under. */
    public var programId: String?
    /** The official or public name of the service. */
    public var name: String?
    /** Alternative or commonly used name for a service. */
    public var alternateName: String?
    /** A description of the service. */
    public var description: String?
    /** URL of the service */
    public var url: String?
    /** Email address for the service */
    public var email: String?
    /** The current status of the service. */
    public var status: String?
    /** The steps needed to access the service. */
    public var applicationProcess: String?
    /** Time a client may expect to wait before receiving a service. */
    public var waitTime: String?
    /** A comma separated list of identifiers from the taxonomy table. Advanced users may also include composite categories, using * to combine two taxonomy terms. */
    public var taxonomyIds: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["organization_id"] = self.organizationId
        nillableDictionary["location_id"] = self.locationId
        nillableDictionary["program_id"] = self.programId
        nillableDictionary["name"] = self.name
        nillableDictionary["alternate_name"] = self.alternateName
        nillableDictionary["description"] = self.description
        nillableDictionary["url"] = self.url
        nillableDictionary["email"] = self.email
        nillableDictionary["status"] = self.status
        nillableDictionary["application_process"] = self.applicationProcess
        nillableDictionary["wait_time"] = self.waitTime
        nillableDictionary["taxonomy_ids"] = self.taxonomyIds
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
