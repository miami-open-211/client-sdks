/**
 * Miami Open 211 API
 * This is a developer area for the Miami Open211 API, providing access to the raw data behind the Switchboard of Miami website. The purpose of this API is to allow anyone to develop web, mobile, or other types of applications that serve the mission of Miami Open211.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Location  {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("organization_id")
  private String organizationId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("alternate_name")
  private String alternateName = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("transportation")
  private String transportation = null;
  @SerializedName("latitude")
  private String latitude = null;
  @SerializedName("longitude")
  private String longitude = null;

  /**
   * Each location must have a unique identifier
   **/
  @ApiModelProperty(value = "Each location must have a unique identifier")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Each location must belong to a single organization. The identifier of the organization should be given here.
   **/
  @ApiModelProperty(value = "Each location must belong to a single organization. The identifier of the organization should be given here.")
  public String getOrganizationId() {
    return organizationId;
  }
  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  /**
   * The name of the location
   **/
  @ApiModelProperty(value = "The name of the location")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * An alternative name for the location
   **/
  @ApiModelProperty(value = "An alternative name for the location")
  public String getAlternateName() {
    return alternateName;
  }
  public void setAlternateName(String alternateName) {
    this.alternateName = alternateName;
  }

  /**
   * A description of this location.
   **/
  @ApiModelProperty(value = "A description of this location.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * A description of the access to public or private transportation to and from the location.
   **/
  @ApiModelProperty(value = "A description of the access to public or private transportation to and from the location.")
  public String getTransportation() {
    return transportation;
  }
  public void setTransportation(String transportation) {
    this.transportation = transportation;
  }

  /**
   * Y coordinate of location expressed in decimal degrees in WGS84 datum.
   **/
  @ApiModelProperty(value = "Y coordinate of location expressed in decimal degrees in WGS84 datum.")
  public String getLatitude() {
    return latitude;
  }
  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }

  /**
   * X coordinate of location expressed in decimal degrees in WGS84 datum.
   **/
  @ApiModelProperty(value = "X coordinate of location expressed in decimal degrees in WGS84 datum.")
  public String getLongitude() {
    return longitude;
  }
  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return (id == null ? location.id == null : id.equals(location.id)) &&
        (organizationId == null ? location.organizationId == null : organizationId.equals(location.organizationId)) &&
        (name == null ? location.name == null : name.equals(location.name)) &&
        (alternateName == null ? location.alternateName == null : alternateName.equals(location.alternateName)) &&
        (description == null ? location.description == null : description.equals(location.description)) &&
        (transportation == null ? location.transportation == null : transportation.equals(location.transportation)) &&
        (latitude == null ? location.latitude == null : latitude.equals(location.latitude)) &&
        (longitude == null ? location.longitude == null : longitude.equals(location.longitude));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (organizationId == null ? 0: organizationId.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (alternateName == null ? 0: alternateName.hashCode());
    result = 31 * result + (description == null ? 0: description.hashCode());
    result = 31 * result + (transportation == null ? 0: transportation.hashCode());
    result = 31 * result + (latitude == null ? 0: latitude.hashCode());
    result = 31 * result + (longitude == null ? 0: longitude.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  organizationId: ").append(organizationId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  alternateName: ").append(alternateName).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  transportation: ").append(transportation).append("\n");
    sb.append("  latitude: ").append(latitude).append("\n");
    sb.append("  longitude: ").append(longitude).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
