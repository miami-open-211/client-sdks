/**
 * Miami Open 211 API
 * This is a developer area for the Miami Open211 API, providing access to the raw data behind the Switchboard of Miami website. The purpose of this API is to allow anyone to develop web, mobile, or other types of applications that serve the mission of Miami Open211.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MiamiOpen211Api) {
      root.MiamiOpen211Api = {};
    }
    root.MiamiOpen211Api.Organization = factory(root.MiamiOpen211Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Organization model module.
   * @module model/Organization
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Organization</code>.
   * @alias module:model/Organization
   * @class
   */
  var exports = function() {
    var _this = this;











  };

  /**
   * Constructs a <code>Organization</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Organization} obj Optional instance to populate.
   * @return {module:model/Organization} The populated <code>Organization</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('alternate_name')) {
        obj['alternate_name'] = ApiClient.convertToType(data['alternate_name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('tax_status')) {
        obj['tax_status'] = ApiClient.convertToType(data['tax_status'], 'String');
      }
      if (data.hasOwnProperty('tax_id')) {
        obj['tax_id'] = ApiClient.convertToType(data['tax_id'], 'String');
      }
      if (data.hasOwnProperty('year_incorporated')) {
        obj['year_incorporated'] = ApiClient.convertToType(data['year_incorporated'], 'String');
      }
      if (data.hasOwnProperty('legal_status')) {
        obj['legal_status'] = ApiClient.convertToType(data['legal_status'], 'String');
      }
    }
    return obj;
  }

  /**
   * Each organization must have a unique identifier.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The official or public name of the organization.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Alternative or commonly used name for the organization.
   * @member {String} alternate_name
   */
  exports.prototype['alternate_name'] = undefined;
  /**
   * A brief summary about the organization. It can contain markup such as HTML or Markdown.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The contact e-mail address for the organization.
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * The UR of the organization.
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * Government assigned tax designation for for tax-exempt organizations.
   * @member {String} tax_status
   */
  exports.prototype['tax_status'] = undefined;
  /**
   * A government issued identifier used for the purpose of tax administration.
   * @member {String} tax_id
   */
  exports.prototype['tax_id'] = undefined;
  /**
   * The year in which the organization was legally formed.
   * @member {String} year_incorporated
   */
  exports.prototype['year_incorporated'] = undefined;
  /**
   * The legal status defines the conditions that an organization is operating under.
   * @member {String} legal_status
   */
  exports.prototype['legal_status'] = undefined;



  return exports;
}));


